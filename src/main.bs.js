// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List           = require("bs-platform/lib/js/list.js");
var Curry          = require("bs-platform/lib/js/curry.js");
var CamlinternalOO = require("bs-platform/lib/js/camlinternalOO.js");

var canvas = document.getElementById("screen");

var screen = canvas.getContext("2d");

function getScreenSize(context) {
  return /* record */[
          /* width */context.width,
          /* height */context.height
        ];
}

function update(body) {
  return body;
}

function tick(game) {
  return /* record */[
          /* bodies */List.map(update, game[/* bodies */0]),
          /* playerAlive : true */1,
          /* invadersLeft : true */1
        ];
}

function drawBody(screen, body) {
  var exit = 0;
  switch (body.tag | 0) {
    case 1 : 
        var match = body[0];
        var center = match[/* center */1];
        var size = match[/* size */0];
        screen.fillRect(center[/* x */0] - (size[/* width */0] / 2 | 0) | 0, center[/* y */1] - (size[/* height */1] / 2 | 0) | 0, size[/* width */0], size[/* height */1]);
        return /* () */0;
    case 0 : 
    case 2 : 
        exit = 1;
        break;
    
  }
  if (exit === 1) {
    var match$1 = body[0];
    var center$1 = match$1[/* center */1];
    var size$1 = match$1[/* size */0];
    screen.fillRect(center$1[/* x */0] - (size$1[/* width */0] / 2 | 0) | 0, center$1[/* y */1] - (size$1[/* height */1] / 2 | 0) | 0, size$1[/* width */0], size$1[/* height */1]);
    return /* () */0;
  }
  
}

function draw(game, screen) {
  var screenSize = getScreenSize(screen);
  screen.clearRect(0, 0, screenSize[/* width */0], screenSize[/* height */1]);
  return List.map((function (param) {
                return drawBody(screen, param);
              }), game[/* bodies */0]);
}

var class_tables = [
  0,
  0,
  0
];

function gameLoop() {
  if (!class_tables[0]) {
    var $$class = CamlinternalOO.create_table(0);
    var env_init = function () {
      return CamlinternalOO.create_object_opt(0, $$class);
    };
    CamlinternalOO.init_class($$class);
    class_tables[0] = env_init;
  }
  return Curry._1(class_tables[0], 0);
}

exports.canvas        = canvas;
exports.screen        = screen;
exports.getScreenSize = getScreenSize;
exports.update        = update;
exports.tick          = tick;
exports.drawBody      = drawBody;
exports.draw          = draw;
exports.gameLoop      = gameLoop;
/* canvas Not a pure module */
