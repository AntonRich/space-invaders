// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List  = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");

var canvas = document.getElementById("screen");

var screen = canvas.getContext("2d");

function getScreenSize(context) {
  return /* record */[
          /* width */context.width,
          /* height */context.height
        ];
}

function update(body) {
  return body;
}

function tick(game) {
  return /* record */[
          /* bodies */List.map(update, game[/* bodies */0]),
          /* playerAlive : true */1,
          /* invadersLeft : true */1
        ];
}

function drawBody(screen, body) {
  var exit = 0;
  switch (body.tag | 0) {
    case 1 : 
        var match = body[0];
        var center = match[/* center */1];
        var size = match[/* size */0];
        screen.fillRect(center[/* x */0] - (size[/* width */0] / 2 | 0) | 0, center[/* y */1] - (size[/* height */1] / 2 | 0) | 0, size[/* width */0], size[/* height */1]);
        return /* () */0;
    case 0 : 
    case 2 : 
        exit = 1;
        break;
    
  }
  if (exit === 1) {
    var match$1 = body[0];
    var center$1 = match$1[/* center */1];
    var size$1 = match$1[/* size */0];
    screen.fillRect(center$1[/* x */0] - (size$1[/* width */0] / 2 | 0) | 0, center$1[/* y */1] - (size$1[/* height */1] / 2 | 0) | 0, size$1[/* width */0], size$1[/* height */1]);
    return /* () */0;
  }
  
}

function draw(game, canvas) {
  var screen = canvas.getContext("2d");
  var screenSize = getScreenSize(canvas);
  screen.clearRect(0, 0, screenSize[/* width */0], screenSize[/* height */1]);
  return List.map((function (param) {
                return drawBody(screen, param);
              }), game[/* bodies */0]);
}

var initialState = /* record */[
  /* bodies : :: */[
    /* Player */Block.__(0, [/* record */[
          /* size : record */[
            /* width */12,
            /* height */6
          ],
          /* center : record */[
            /* x */30,
            /* y */30
          ]
        ]]),
    /* :: */[
      /* Invader */Block.__(1, [/* record */[
            /* size : record */[
              /* width */30,
              /* height */10
            ],
            /* center : record */[
              /* x */10,
              /* y */90
            ],
            /* patrolX */3,
            /* speedX */3
          ]]),
      /* [] */0
    ]
  ],
  /* playerAlive : true */1,
  /* invadersLeft : true */1
];

function gameLoop(state, _) {
  var nextState = tick(state);
  draw(nextState, canvas);
  return requestAnimationFrame((function (param) {
                return gameLoop(nextState, param);
              }));
}

gameLoop(initialState, 0);

exports.canvas        = canvas;
exports.screen        = screen;
exports.getScreenSize = getScreenSize;
exports.update        = update;
exports.tick          = tick;
exports.drawBody      = drawBody;
exports.draw          = draw;
exports.initialState  = initialState;
exports.gameLoop      = gameLoop;
/* canvas Not a pure module */
